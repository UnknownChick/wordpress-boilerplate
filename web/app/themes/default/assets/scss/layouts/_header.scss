@use 'sass:map';
@use '../abstracts/colors' as c;
@use '../abstracts/media-queries' as mq;
@use '../abstracts/mixins' as mix;
@use '../abstracts/variables' as var;
@use '../components/button' as btn;
@use '../utilities/row' as r;

$_ln: header;

$header: (
  border-top-width: 0.25rem,
  breakpoint: lg
) !default;

@mixin header-default {
  background-color: c.$secondary-500;

  .#{$_ln}__menu {
    &__wrapper {
      li {
        .#{$_ln}__menu__links {
          padding: 2rem 1rem;

          @include mq.max-device(map.get($header, breakpoint)) {
            padding: 2rem;
          }
        }
      }
    }
  }
}

@layer layouts {
  .#{$_ln} {
    position: sticky;
    top: 0;
    font-weight: 500;
    font-size: 1.25rem;
    z-index: 100;
    width: 100%;
    transition: all map.get(var.$global, animation-duration) ease-in-out;
    @include header-default;

    .#{$_ln}__container {
      position: relative;

      @include mq.min-device(map.get($header, breakpoint)) {
        max-width: map.get(var.$breakpoints, xl);
        width: r.$wrapper-width;
        margin-inline: auto;
        @include mix.flex-row-align-center;
      }

      @include mq.max-device(map.get($header, breakpoint)) {
        padding: 1rem;
        align-items: center;
        @include mix.flex-row-space-between;
      }
    }

    .#{$_ln}__logo {
      display: block;
      margin-right: 2rem;
      position: relative;
      z-index: 10;
    }

    .#{$_ln}__menu {
      flex-grow: 1;

      @include mq.min-device(map.get($header, breakpoint)) {
        @include mix.flex-row-align-center;
      }

      @include mq.max-device(map.get($header, breakpoint)) {
        position: absolute;
        background-color: c.$secondary-500;
        padding: 5rem 0 2rem;
        width: 300px;
        height: 100dvh;
        right: 0;
        top: calc(-1 * map.get($header, border-top-width));
        border-top: map.get($header, border-top-width) solid c.$primary-500;
        transform: translateX(100%);
        will-change: transform;
        transition: transform map.get(var.$global, animation-duration) ease-in-out;
        @include mix.flex-column;
      }

      &__wrapper {
        position: relative;
        list-style: none;
        color: map.get(c.$semantic, 'white');
        flex: 1;
        @include mix.flex-row;

        @include mq.max-device(map.get($header, breakpoint)) {
          @include mix.flex-column;
        }

        li {
          position: relative;

          .#{$_ln}__menu__links {
            display: block;
            position: relative;
            z-index: 1;
            color: map.get(c.$semantic, 'white');
            transition:
              background-color map.get(var.$global, animation-duration) ease-in-out,
              padding map.get(var.$global, animation-duration) ease-in-out
            ;

            @include mq.max-device(map.get($header, breakpoint)) {
              &:is(.active, :hover, :focus) {
                background-color: c.$primary-500;
              }
            }
          }
        }
      }

      &__active {
        position: absolute;
        left: 0;
        bottom: 0;
        height: 0.25rem;
        background: c.$primary-500;
        transition: transform 0.3s cubic-bezier(0.4,0,0.2,1), width 0.3s cubic-bezier(0.4,0,0.2,1);
        will-change: transform, width;
        pointer-events: none;

        @include mq.max-device(map.get($header, breakpoint)) {
          display: none;
        }
      }
    }

    .#{$_ln}__socials {
      @include mq.min-device(map.get($header, breakpoint)) {
        margin-right: 1rem;
      }

      @include mq.max-device(map.get($header, breakpoint)) {
        padding: 0 2rem;
        order: 3;
        margin-top: 2rem;

        a {
          padding: 0.5rem;

          svg {
            width: 2rem;
          }
        }
      }
    }

    .#{$_ln}__toggle {
      color: map.get(c.$semantic, 'white');
      cursor: pointer;
      position: relative;
      z-index: 10;
      width: 3rem;
      height: 3rem;
      gap: 0.5rem;
      @include mix.flex-column-center-center;

      @include mq.min-device(map.get($header, breakpoint)) {
        display: none;
      }

      & > span {
        display: block;
        width: 2.25rem;
        height: 0.25rem;
        background: map.get(c.$semantic, 'white');
        border-radius: 2px;
        transition: all 0.3s cubic-bezier(0.4,0,0.2,1);
      }
    }

    &--open {
      .#{$_ln}__menu {
        transform: translateX(0);
      }

      .#{$_ln}__toggle {
        & > span:nth-child(1) {
          transform: translateY(0.72rem) rotate(45deg);
        }
        & > span:nth-child(2) {
          opacity: 0;
        }
        & > span:nth-child(3) {
          transform: translateY(-0.72rem) rotate(-45deg);
        }
      }
    }
  }
}
