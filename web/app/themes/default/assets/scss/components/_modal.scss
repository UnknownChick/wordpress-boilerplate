@use 'sass:map';
@use '../abstracts/colors' as c;
@use '../abstracts/variables' as v;

$_cn: modal;

$modal: (
  backdrop-color: rgba(0,0,0,0.5),
  background-color: map.get(c.$semantic, 'white'),
  border-radius: map.get(v.$global, border-radius),
  box-shadow: map.get(v.$global, box-shadow),
  close-background-color: map.get(c.$semantic, greyscale),
  close-border-radius: 50%,
  close-size: 1.5rem,
  color: map.get(c.$semantic, text),
  padding: 1rem,
) !default;

@layer components {
	.#{$_cn} {
		background-color: map.get($modal, background-color);
		box-shadow: map.get($modal, box-shadow);
		border-radius: map.get($modal, border-radius);
		margin: auto;
		width: 100%;
		overflow: visible;
	
		p, ul, ol, a {
			color: map.get($modal, color);
		}
	
		&__close {
			position: absolute;
			background-color: map.get($modal, close-background-color);
			border-radius: map.get($modal, close-border-radius);
			width: map.get($modal, close-size);
			height: map.get($modal, close-size);
			top: map.get($modal, padding);
			right: map.get($modal, padding);
			padding: 0.125rem;
			display: flex;
			justify-content: center;
			align-items: center;
			cursor: pointer;
			transition: transform map.get(v.$global, animation-duration) ease-in-out;
	
			&:hover {
				transform: scale(1.1);
			}
		}
	
		&__title {
			padding: map.get($modal, padding);
			border-bottom: 1px solid map.get(c.$semantic, greyscale);
		}
	
		&__content {
			padding: map.get($modal, padding);
		}
	
		&__footer {
			padding: map.get($modal, padding);
			display: flex;
			justify-content: flex-end;
			gap: 1rem;
		}
	}
	
	dialog.preview {
		padding: 0;
	}
	
	::backdrop {
		background-color: map.get($modal, backdrop-color);
	}
}
