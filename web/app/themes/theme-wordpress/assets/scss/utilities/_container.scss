@use "../abstracts/media-queries" as *;

$gap-default: 2rem;
$container-width: 90%;
$container-max-widths: (
	xxs: 375px,
	xs: 576px,
	sm: 768px,
	md: 1024px,
	lg: 1280px,
	xl: 1440px,
	xxl: 1600px,
	full: 100%
);

$col-widths: (25, 33, 40, 50, 60, 66, 75);

@mixin create-gap-classes {
	@for $i from 0 through 5 {
		.gap-#{$i} {
			gap: #{$i}rem !important;

			@each $width in $col-widths {
				& > .col-#{$width} {
					$divisor: if($width == 33, 3, 2);
					flex: 0 1 calc(#{$width}#{"%"} - #{$i}rem / #{$divisor}) !important;
				}
			}
		}
	}
}

@mixin create-row-classes {
	@each $size, $width in $container-max-widths {
		&-#{$size} {
			@if $size == 'full' {
				width: 100%;
			} @else {
				max-width: $width;
			}
		}

		&-align {
			&-left-#{$size},
			&-right-#{$size} {
				width: calc((100% - ((100% - #{$width}) / 2)));
				max-width: $container-width;
			}
			&-left-#{$size} {
				margin-right: auto;
				margin-left: 0;
			}
			&-right-#{$size} {
				margin-right: 0;
				margin-left: auto;
			}
		}
	}
}

@include create-gap-classes;

.row {
	position: relative;
	width: $container-width;
	margin-inline: auto;
	display: flex;
	gap: $gap-default;
	z-index: 2;

	&-horiziontal {
		flex-direction: row;
	}

	&-vertical {
		flex-direction: column;
	}

	&-max {
		width: max-content;
	}

	&-reverse {
		flex-direction: row-reverse;
	}

	& > .col {
		flex: 1;

		@each $width in $col-widths {
			&-#{$width} {
				flex: 0 1 calc(#{$width}#{"%"} - $gap-default / 2);
			}
		}

		&-max {
			width: max-content;
			flex: unset;
		}
	}

	@include create-row-classes;

	@include max-device(desktop) {
		&:not(.is-mobile) {
			flex-direction: column;
			flex-wrap: wrap;
			.col {
				width: 100%;
			}
		}
	}
}

.jc {
	&-center {
		justify-content: center;
	}

	&-end {
		justify-content: flex-end;
	}

	&-space-between {
		justify-content: space-between;
	}
	&-space-around {
		justify-content: space-around;
	}
}